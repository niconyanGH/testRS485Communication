package ksxsdk;
import java.util.ArrayList;
import java.util.List;
import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.util.Base64;
import com.fasterxml.jackson.core.JsonParseException;
import com.fasterxml.jackson.databind.*;


public class JsonFiles {
    
    private static List<KSX_NodeMeta> mMetas=new ArrayList<KSX_NodeMeta>();

     private static String default_actuator_base64 = "";
        private static String default_sensor_base64 = "ew0KICAiQ2xhc3MiOiAibm9kZSIsDQogICJUeXBlIjogInNlbnNvci1ub2RlIiwNCiAgIk1vZGVsIjogIkRFRi1TRU5TT1JOT0RFLTAwMSIsDQogICJOYW1lIjogIuuUlO2PtO2KuOyEvOyEnOuFuOuTnCIsDQogICJDb21tU3BlYyI6IHsNCiAgICAiS1NfWF8zMjY3XzIwMTgiOiB7DQogICAgICAicmVhZCI6IHsNCiAgICAgICAgInN0YXJ0aW5nX3JlZ2lzdGVyIjogMjAxLA0KICAgICAgICAiaXRlbXMiOiBbDQogICAgICAgICAgIm9waWQiLA0KICAgICAgICAgICJzdGF0dXMiDQogICAgICAgIF0NCiAgICAgIH0sDQogICAgICAid3JpdGUiOiB7DQogICAgICAgICJzdGFydGluZ19yZWdpc3RlciI6IDQwMSwNCiAgICAgICAgIml0ZW1zIjogWw0KICAgICAgICAgICJvcGVyYXRpb24iLA0KICAgICAgICAgICJvcGlkIg0KICAgICAgICBdDQogICAgICB9DQogICAgfQ0KICB9LA0KICAiRGV2aWNlcyI6IFsNCiAgICB7DQogICAgICAiQ2xhc3MiOiAic2Vuc29yIiwNCiAgICAgICJUeXBlIjogInRlbXBlcmF0dXJlLXNlbnNvciIsDQogICAgICAiTW9kZWwiOiAiU0VOLVRFTVAiLA0KICAgICAgIk5hbWUiOiAi7Jio64+E7IS87IScIiwNCiAgICAgICJWYWx1ZVVuaXQiOiAi4oSDIiwNCiAgICAgICJWYWx1ZVR5cGUiOiAiZmxvYXQiLA0KICAgICAgIkNvbW1TcGVjIjogew0KICAgICAgICAiS1NfWF8zMjY3XzIwMTgiOiB7DQogICAgICAgICAgInJlYWQiOiB7DQogICAgICAgICAgICAic3RhcnRpbmdfcmVnaXN0ZXIiOiAyMDMsDQogICAgICAgICAgICAiaXRlbXMiOiBbDQogICAgICAgICAgICAgICJ2YWx1ZSIsDQogICAgICAgICAgICAgICJzdGF0dXMiDQogICAgICAgICAgICBdDQogICAgICAgICAgfQ0KICAgICAgICB9DQogICAgICB9DQogICAgfSwNCiAgICB7DQogICAgICAiQ2xhc3MiOiAic2Vuc29yIiwNCiAgICAgICJUeXBlIjogInRlbXBlcmF0dXJlLXNlbnNvciIsDQogICAgICAiTW9kZWwiOiAiU0VOLVRFTVAiLA0KICAgICAgIk5hbWUiOiAi7Jio64+E7IS87IScIiwNCiAgICAgICJWYWx1ZVVuaXQiOiAi4oSDIiwNCiAgICAgICJWYWx1ZVR5cGUiOiAiZmxvYXQiLA0KICAgICAgIkNvbW1TcGVjIjogew0KICAgICAgICAiS1NfWF8zMjY3XzIwMTgiOiB7DQogICAgICAgICAgInJlYWQiOiB7DQogICAgICAgICAgICAic3RhcnRpbmdfcmVnaXN0ZXIiOiAyMDYsDQogICAgICAgICAgICAiaXRlbXMiOiBbDQogICAgICAgICAgICAgICJ2YWx1ZSIsDQogICAgICAgICAgICAgICJzdGF0dXMiDQogICAgICAgICAgICBdDQogICAgICAgICAgfQ0KICAgICAgICB9DQogICAgICB9DQogICAgfSwNCiAgICB7DQogICAgICAiQ2xhc3MiOiAic2Vuc29yIiwNCiAgICAgICJUeXBlIjogInRlbXBlcmF0dXJlLXNlbnNvciIsDQogICAgICAiTW9kZWwiOiAiU0VOLVRFTVAiLA0KICAgICAgIk5hbWUiOiAi7Jio64+E7IS87IScIiwNCiAgICAgICJWYWx1ZVVuaXQiOiAi4oSDIiwNCiAgICAgICJWYWx1ZVR5cGUiOiAiZmxvYXQiLA0KICAgICAgIkNvbW1TcGVjIjogew0KICAgICAgICAiS1NfWF8zMjY3XzIwMTgiOiB7DQogICAgICAgICAgInJlYWQiOiB7DQogICAgICAgICAgICAic3RhcnRpbmdfcmVnaXN0ZXIiOiAyMDksDQogICAgICAgICAgICAiaXRlbXMiOiBbDQogICAgICAgICAgICAgICJ2YWx1ZSIsDQogICAgICAgICAgICAgICJzdGF0dXMiDQogICAgICAgICAgICBdDQogICAgICAgICAgfQ0KICAgICAgICB9DQogICAgICB9DQogICAgfSwNCiAgICB7DQogICAgICAiQ2xhc3MiOiAic2Vuc29yIiwNCiAgICAgICJUeXBlIjogImh1bWlkaXR5LXNlbnNvciIsDQogICAgICAiTW9kZWwiOiAiU0VOLUhVTSIsDQogICAgICAiTmFtZSI6ICLsirXrj4TshLzshJwiLA0KICAgICAgIlZhbHVlVW5pdCI6ICIlIiwNCiAgICAgICJWYWx1ZVR5cGUiOiAiZmxvYXQiLA0KICAgICAgIkNvbW1TcGVjIjogew0KICAgICAgICAiS1NfWF8zMjY3XzIwMTgiOiB7DQogICAgICAgICAgInJlYWQiOiB7DQogICAgICAgICAgICAic3RhcnRpbmdfcmVnaXN0ZXIiOiAyMTIsDQogICAgICAgICAgICAiaXRlbXMiOiBbDQogICAgICAgICAgICAgICJ2YWx1ZSIsDQogICAgICAgICAgICAgICJzdGF0dXMiDQogICAgICAgICAgICBdDQogICAgICAgICAgfQ0KICAgICAgICB9DQogICAgICB9DQogICAgfSwNCiAgICB7DQogICAgICAiQ2xhc3MiOiAic2Vuc29yIiwNCiAgICAgICJUeXBlIjogImRld3BvaW50LXNlbnNvciIsDQogICAgICAiTW9kZWwiOiAiU0VOLURFVyIsDQogICAgICAiTmFtZSI6ICLsnbTsiqzsoJDshLzshJwiLA0KICAgICAgIlZhbHVlVW5pdCI6ICLihIMiLA0KICAgICAgIlZhbHVlVHlwZSI6ICJmbG9hdCIsDQogICAgICAiQ29tbVNwZWMiOiB7DQogICAgICAgICJLU19YXzMyNjdfMjAxOCI6IHsNCiAgICAgICAgICAicmVhZCI6IHsNCiAgICAgICAgICAgICJzdGFydGluZ19yZWdpc3RlciI6IDIxNSwNCiAgICAgICAgICAgICJpdGVtcyI6IFsNCiAgICAgICAgICAgICAgInZhbHVlIiwNCiAgICAgICAgICAgICAgInN0YXR1cyINCiAgICAgICAgICAgIF0NCiAgICAgICAgICB9DQogICAgICAgIH0NCiAgICAgIH0NCiAgICB9LA0KICAgIHsNCiAgICAgICJDbGFzcyI6ICJzZW5zb3IiLA0KICAgICAgIlR5cGUiOiAicmFpbi1kZXRlY3Rvci1zZW5zb3IiLA0KICAgICAgIk1vZGVsIjogIlNFTi1SQUlOLUQiLA0KICAgICAgIk5hbWUiOiAi6rCQ7Jqw7IS87IScIiwNCiAgICAgICJWYWx1ZVVuaXQiOiAiIiwNCiAgICAgICJWYWx1ZVR5cGUiOiAiZmxvYXQiLA0KICAgICAgIkNvbW1TcGVjIjogew0KICAgICAgICAiS1NfWF8zMjY3XzIwMTgiOiB7DQogICAgICAgICAgInJlYWQiOiB7DQogICAgICAgICAgICAic3RhcnRpbmdfcmVnaXN0ZXIiOiAyMTgsDQogICAgICAgICAgICAiaXRlbXMiOiBbDQogICAgICAgICAgICAgICJ2YWx1ZSIsDQogICAgICAgICAgICAgICJzdGF0dXMiDQogICAgICAgICAgICBdDQogICAgICAgICAgfQ0KICAgICAgICB9DQogICAgICB9DQogICAgfSwNCiAgICB7DQogICAgICAiQ2xhc3MiOiAic2Vuc29yIiwNCiAgICAgICJUeXBlIjogImZsb3ctc2Vuc29yIiwNCiAgICAgICJNb2RlbCI6ICJTRU4tRkxPVyIsDQogICAgICAiTmFtZSI6ICLsnKDrn4nshLzshJwiLA0KICAgICAgIlZhbHVlVW5pdCI6ICJMIiwNCiAgICAgICJWYWx1ZVR5cGUiOiAiZmxvYXQiLA0KICAgICAgIkNvbW1TcGVjIjogew0KICAgICAgICAiS1NfWF8zMjY3XzIwMTgiOiB7DQogICAgICAgICAgInJlYWQiOiB7DQogICAgICAgICAgICAic3RhcnRpbmdfcmVnaXN0ZXIiOiAyMjEsDQogICAgICAgICAgICAiaXRlbXMiOiBbDQogICAgICAgICAgICAgICJ2YWx1ZSIsDQogICAgICAgICAgICAgICJzdGF0dXMiDQogICAgICAgICAgICBdDQogICAgICAgICAgfQ0KICAgICAgICB9DQogICAgICB9DQogICAgfSwNCiAgICB7DQogICAgICAiQ2xhc3MiOiAic2Vuc29yIiwNCiAgICAgICJUeXBlIjogInJhaW4tZ2F1Z2Utc2Vuc29yIiwNCiAgICAgICJNb2RlbCI6ICJTRU4tUkFJTi1HIiwNCiAgICAgICJOYW1lIjogIuqwleyasOyEvOyEnCIsDQogICAgICAiVmFsdWVVbml0IjogIm1tIiwNCiAgICAgICJWYWx1ZVR5cGUiOiAiZmxvYXQiLA0KICAgICAgIkNvbW1TcGVjIjogew0KICAgICAgICAiS1NfWF8zMjY3XzIwMTgiOiB7DQogICAgICAgICAgInJlYWQiOiB7DQogICAgICAgICAgICAic3RhcnRpbmdfcmVnaXN0ZXIiOiAyMjQsDQogICAgICAgICAgICAiaXRlbXMiOiBbDQogICAgICAgICAgICAgICJ2YWx1ZSIsDQogICAgICAgICAgICAgICJzdGF0dXMiDQogICAgICAgICAgICBdDQogICAgICAgICAgfQ0KICAgICAgICB9DQogICAgICB9DQogICAgfSwNCiAgICB7DQogICAgICAiQ2xhc3MiOiAic2Vuc29yIiwNCiAgICAgICJUeXBlIjogInB5cmFub21ldGVyLXNlbnNvciIsDQogICAgICAiTW9kZWwiOiAiU0VOLVJBRCIsDQogICAgICAiTmFtZSI6ICLsnbzsgqzshLzshJwiLA0KICAgICAgIlZhbHVlVW5pdCI6ICJXL23CsiIsDQogICAgICAiVmFsdWVUeXBlIjogImZsb2F0IiwNCiAgICAgICJDb21tU3BlYyI6IHsNCiAgICAgICAgIktTX1hfMzI2N18yMDE4Ijogew0KICAgICAgICAgICJyZWFkIjogew0KICAgICAgICAgICAgInN0YXJ0aW5nX3JlZ2lzdGVyIjogMjI3LA0KICAgICAgICAgICAgIml0ZW1zIjogWw0KICAgICAgICAgICAgICAidmFsdWUiLA0KICAgICAgICAgICAgICAic3RhdHVzIg0KICAgICAgICAgICAgXQ0KICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgICAgfQ0KICAgIH0sDQogICAgew0KICAgICAgIkNsYXNzIjogInNlbnNvciIsDQogICAgICAiVHlwZSI6ICJ3aW5kLXNwZWVkLXNlbnNvciIsDQogICAgICAiTW9kZWwiOiAiU0VOLVdTUEVFRCIsDQogICAgICAiTmFtZSI6ICLtko3sho3shLzshJwiLA0KICAgICAgIlZhbHVlVW5pdCI6ICJtL3MiLA0KICAgICAgIlZhbHVlVHlwZSI6ICJmbG9hdCIsDQogICAgICAiQ29tbVNwZWMiOiB7DQogICAgICAgICJLU19YXzMyNjdfMjAxOCI6IHsNCiAgICAgICAgICAicmVhZCI6IHsNCiAgICAgICAgICAgICJzdGFydGluZ19yZWdpc3RlciI6IDIzMCwNCiAgICAgICAgICAgICJpdGVtcyI6IFsNCiAgICAgICAgICAgICAgInZhbHVlIiwNCiAgICAgICAgICAgICAgInN0YXR1cyINCiAgICAgICAgICAgIF0NCiAgICAgICAgICB9DQogICAgICAgIH0NCiAgICAgIH0NCiAgICB9LA0KICAgIHsNCiAgICAgICJDbGFzcyI6ICJzZW5zb3IiLA0KICAgICAgIlR5cGUiOiAid2luZC1kaXJlY3Rpb24tc2Vuc29yIiwNCiAgICAgICJNb2RlbCI6ICJTRU4tV0RJUiIsDQogICAgICAiTmFtZSI6ICLtko3tlqXshLzshJwiLA0KICAgICAgIlZhbHVlVW5pdCI6ICLCsCIsDQogICAgICAiVmFsdWVUeXBlIjogImZsb2F0IiwNCiAgICAgICJDb21tU3BlYyI6IHsNCiAgICAgICAgIktTX1hfMzI2N18yMDE4Ijogew0KICAgICAgICAgICJyZWFkIjogew0KICAgICAgICAgICAgInN0YXJ0aW5nX3JlZ2lzdGVyIjogMjMzLA0KICAgICAgICAgICAgIml0ZW1zIjogWw0KICAgICAgICAgICAgICAidmFsdWUiLA0KICAgICAgICAgICAgICAic3RhdHVzIg0KICAgICAgICAgICAgXQ0KICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgICAgfQ0KICAgIH0sDQogICAgew0KICAgICAgIkNsYXNzIjogInNlbnNvciIsDQogICAgICAiVHlwZSI6ICJ2b2x0YWdlLXNlbnNvciIsDQogICAgICAiTW9kZWwiOiAiU0VOLVZPTCIsDQogICAgICAiTmFtZSI6ICLsoITslZXshLzshJwiLA0KICAgICAgIlZhbHVlVW5pdCI6ICJWIiwNCiAgICAgICJWYWx1ZVR5cGUiOiAiZmxvYXQiLA0KICAgICAgIkNvbW1TcGVjIjogew0KICAgICAgICAiS1NfWF8zMjY3XzIwMTgiOiB7DQogICAgICAgICAgInJlYWQiOiB7DQogICAgICAgICAgICAic3RhcnRpbmdfcmVnaXN0ZXIiOiAyMzYsDQogICAgICAgICAgICAiaXRlbXMiOiBbDQogICAgICAgICAgICAgICJ2YWx1ZSIsDQogICAgICAgICAgICAgICJzdGF0dXMiDQogICAgICAgICAgICBdDQogICAgICAgICAgfQ0KICAgICAgICB9DQogICAgICB9DQogICAgfSwNCiAgICB7DQogICAgICAiQ2xhc3MiOiAic2Vuc29yIiwNCiAgICAgICJUeXBlIjogIkNPMi1zZW5zb3IiLA0KICAgICAgIk1vZGVsIjogIlNFTi1DTzIiLA0KICAgICAgIk5hbWUiOiAi7J207IKw7ZmU7YOE7IaM7IS87IScIiwNCiAgICAgICJWYWx1ZVVuaXQiOiAicHBtIiwNCiAgICAgICJWYWx1ZVR5cGUiOiAiZmxvYXQiLA0KICAgICAgIkNvbW1TcGVjIjogew0KICAgICAgICAiS1NfWF8zMjY3XzIwMTgiOiB7DQogICAgICAgICAgInJlYWQiOiB7DQogICAgICAgICAgICAic3RhcnRpbmdfcmVnaXN0ZXIiOiAyMzksDQogICAgICAgICAgICAiaXRlbXMiOiBbDQogICAgICAgICAgICAgICJ2YWx1ZSIsDQogICAgICAgICAgICAgICJzdGF0dXMiDQogICAgICAgICAgICBdDQogICAgICAgICAgfQ0KICAgICAgICB9DQogICAgICB9DQogICAgfSwNCiAgICB7DQogICAgICAiQ2xhc3MiOiAic2Vuc29yIiwNCiAgICAgICJUeXBlIjogIkVDLXNlbnNvciIsDQogICAgICAiTW9kZWwiOiAiU0VOLUVDIiwNCiAgICAgICJOYW1lIjogIkVD7IS87IScIiwNCiAgICAgICJWYWx1ZVVuaXQiOiAiZFMvbSIsDQogICAgICAiVmFsdWVUeXBlIjogImZsb2F0IiwNCiAgICAgICJDb21tU3BlYyI6IHsNCiAgICAgICAgIktTX1hfMzI2N18yMDE4Ijogew0KICAgICAgICAgICJyZWFkIjogew0KICAgICAgICAgICAgInN0YXJ0aW5nX3JlZ2lzdGVyIjogMjQyLA0KICAgICAgICAgICAgIml0ZW1zIjogWw0KICAgICAgICAgICAgICAidmFsdWUiLA0KICAgICAgICAgICAgICAic3RhdHVzIg0KICAgICAgICAgICAgXQ0KICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgICAgfQ0KICAgIH0sDQogICAgew0KICAgICAgIkNsYXNzIjogInNlbnNvciIsDQogICAgICAiVHlwZSI6ICJxdWFudHVtLXNlbnNvciIsDQogICAgICAiTW9kZWwiOiAiU0VOLVFVQU4iLA0KICAgICAgIk5hbWUiOiAi6rSR65+J7J6Q7IS87IScIiwNCiAgICAgICJWYWx1ZVVuaXQiOiAizrxtb2wvbcKyL3MiLA0KICAgICAgIlZhbHVlVHlwZSI6ICJmbG9hdCIsDQogICAgICAiQ29tbVNwZWMiOiB7DQogICAgICAgICJLU19YXzMyNjdfMjAxOCI6IHsNCiAgICAgICAgICAicmVhZCI6IHsNCiAgICAgICAgICAgICJzdGFydGluZ19yZWdpc3RlciI6IDI0NSwNCiAgICAgICAgICAgICJpdGVtcyI6IFsNCiAgICAgICAgICAgICAgInZhbHVlIiwNCiAgICAgICAgICAgICAgInN0YXR1cyINCiAgICAgICAgICAgIF0NCiAgICAgICAgICB9DQogICAgICAgIH0NCiAgICAgIH0NCiAgICB9LA0KICAgIHsNCiAgICAgICJDbGFzcyI6ICJzZW5zb3IiLA0KICAgICAgIlR5cGUiOiAic29pbC1tb2lzdHVyZS1zZW5zb3IiLA0KICAgICAgIk1vZGVsIjogIlNFTi1TTU9JIiwNCiAgICAgICJOYW1lIjogIu2GoO2Wpe2VqOyImOycqOyEvOyEnCIsDQogICAgICAiVmFsdWVVbml0IjogIiV2b2wuIiwNCiAgICAgICJWYWx1ZVR5cGUiOiAiZmxvYXQiLA0KICAgICAgIkNvbW1TcGVjIjogew0KICAgICAgICAiS1NfWF8zMjY3XzIwMTgiOiB7DQogICAgICAgICAgInJlYWQiOiB7DQogICAgICAgICAgICAic3RhcnRpbmdfcmVnaXN0ZXIiOiAyNDgsDQogICAgICAgICAgICAiaXRlbXMiOiBbDQogICAgICAgICAgICAgICJ2YWx1ZSIsDQogICAgICAgICAgICAgICJzdGF0dXMiDQogICAgICAgICAgICBdDQogICAgICAgICAgfQ0KICAgICAgICB9DQogICAgICB9DQogICAgfSwNCiAgICB7DQogICAgICAiQ2xhc3MiOiAic2Vuc29yIiwNCiAgICAgICJUeXBlIjogInRlbnNpb21ldGVyLXNlbnNvciIsDQogICAgICAiTW9kZWwiOiAiU0VOLVRFTiIsDQogICAgICAiTmFtZSI6ICLthqDslpHsnqXroKXshLzshJwiLA0KICAgICAgIlZhbHVlVW5pdCI6ICJrUGEiLA0KICAgICAgIlZhbHVlVHlwZSI6ICJmbG9hdCIsDQogICAgICAiQ29tbVNwZWMiOiB7DQogICAgICAgICJLU19YXzMyNjdfMjAxOCI6IHsNCiAgICAgICAgICAicmVhZCI6IHsNCiAgICAgICAgICAgICJzdGFydGluZ19yZWdpc3RlciI6IDI1MSwNCiAgICAgICAgICAgICJpdGVtcyI6IFsNCiAgICAgICAgICAgICAgInZhbHVlIiwNCiAgICAgICAgICAgICAgInN0YXR1cyINCiAgICAgICAgICAgIF0NCiAgICAgICAgICB9DQogICAgICAgIH0NCiAgICAgIH0NCiAgICB9LA0KICAgIHsNCiAgICAgICJDbGFzcyI6ICJzZW5zb3IiLA0KICAgICAgIlR5cGUiOiAicEgtc2Vuc29yIiwNCiAgICAgICJNb2RlbCI6ICJTRU4tcEgiLA0KICAgICAgIk5hbWUiOiAicEjshLzshJwiLA0KICAgICAgIlZhbHVlVW5pdCI6ICIiLA0KICAgICAgIlZhbHVlVHlwZSI6ICJmbG9hdCIsDQogICAgICAiQ29tbVNwZWMiOiB7DQogICAgICAgICJLU19YXzMyNjdfMjAxOCI6IHsNCiAgICAgICAgICAicmVhZCI6IHsNCiAgICAgICAgICAgICJzdGFydGluZ19yZWdpc3RlciI6IDI1NCwNCiAgICAgICAgICAgICJpdGVtcyI6IFsNCiAgICAgICAgICAgICAgInZhbHVlIiwNCiAgICAgICAgICAgICAgInN0YXR1cyINCiAgICAgICAgICAgIF0NCiAgICAgICAgICB9DQogICAgICAgIH0NCiAgICAgIH0NCiAgICB9LA0KICAgIHsNCiAgICAgICJDbGFzcyI6ICJzZW5zb3IiLA0KICAgICAgIlR5cGUiOiAic29pbC10ZW1wZXJhdHVyZS1zZW5zb3IiLA0KICAgICAgIk1vZGVsIjogIlNFTi1TVEVNUCIsDQogICAgICAiTmFtZSI6ICLsp4DsmKjshLzshJwiLA0KICAgICAgIlZhbHVlVW5pdCI6ICLihIMiLA0KICAgICAgIlZhbHVlVHlwZSI6ICJmbG9hdCIsDQogICAgICAiQ29tbVNwZWMiOiB7DQogICAgICAgICJLU19YXzMyNjdfMjAxOCI6IHsNCiAgICAgICAgICAicmVhZCI6IHsNCiAgICAgICAgICAgICJzdGFydGluZ19yZWdpc3RlciI6IDI1NywNCiAgICAgICAgICAgICJpdGVtcyI6IFsNCiAgICAgICAgICAgICAgInZhbHVlIiwNCiAgICAgICAgICAgICAgInN0YXR1cyINCiAgICAgICAgICAgIF0NCiAgICAgICAgICB9DQogICAgICAgIH0NCiAgICAgIH0NCiAgICB9LA0KICAgIHsNCiAgICAgICJDbGFzcyI6ICJzZW5zb3IiLA0KICAgICAgIlR5cGUiOiAidGVtcGVyYXR1cmUtc2Vuc29yIiwNCiAgICAgICJNb2RlbCI6ICJTRU4tVEVNUCIsDQogICAgICAiTmFtZSI6ICLsmKjrj4TshLzshJwiLA0KICAgICAgIlZhbHVlVW5pdCI6ICLihIMiLA0KICAgICAgIlZhbHVlVHlwZSI6ICJmbG9hdCIsDQogICAgICAiQ29tbVNwZWMiOiB7DQogICAgICAgICJLU19YXzMyNjdfMjAxOCI6IHsNCiAgICAgICAgICAicmVhZCI6IHsNCiAgICAgICAgICAgICJzdGFydGluZ19yZWdpc3RlciI6IDI2MCwNCiAgICAgICAgICAgICJpdGVtcyI6IFsNCiAgICAgICAgICAgICAgInZhbHVlIiwNCiAgICAgICAgICAgICAgInN0YXR1cyINCiAgICAgICAgICAgIF0NCiAgICAgICAgICB9DQogICAgICAgIH0NCiAgICAgIH0NCiAgICB9LA0KICAgIHsNCiAgICAgICJDbGFzcyI6ICJzZW5zb3IiLA0KICAgICAgIlR5cGUiOiAidGVtcGVyYXR1cmUtc2Vuc29yIiwNCiAgICAgICJNb2RlbCI6ICJTRU4tVEVNUCIsDQogICAgICAiTmFtZSI6ICLsmKjrj4TshLzshJwiLA0KICAgICAgIlZhbHVlVW5pdCI6ICLihIMiLA0KICAgICAgIlZhbHVlVHlwZSI6ICJmbG9hdCIsDQogICAgICAiQ29tbVNwZWMiOiB7DQogICAgICAgICJLU19YXzMyNjdfMjAxOCI6IHsNCiAgICAgICAgICAicmVhZCI6IHsNCiAgICAgICAgICAgICJzdGFydGluZ19yZWdpc3RlciI6IDI2MywNCiAgICAgICAgICAgICJpdGVtcyI6IFsNCiAgICAgICAgICAgICAgInZhbHVlIiwNCiAgICAgICAgICAgICAgInN0YXR1cyINCiAgICAgICAgICAgIF0NCiAgICAgICAgICB9DQogICAgICAgIH0NCiAgICAgIH0NCiAgICB9LA0KICAgIHsNCiAgICAgICJDbGFzcyI6ICJzZW5zb3IiLA0KICAgICAgIlR5cGUiOiAidGVtcGVyYXR1cmUtc2Vuc29yIiwNCiAgICAgICJNb2RlbCI6ICJTRU4tVEVNUCIsDQogICAgICAiTmFtZSI6ICLsmKjrj4TshLzshJwiLA0KICAgICAgIlZhbHVlVW5pdCI6ICLihIMiLA0KICAgICAgIlZhbHVlVHlwZSI6ICJmbG9hdCIsDQogICAgICAiQ29tbVNwZWMiOiB7DQogICAgICAgICJLU19YXzMyNjdfMjAxOCI6IHsNCiAgICAgICAgICAicmVhZCI6IHsNCiAgICAgICAgICAgICJzdGFydGluZ19yZWdpc3RlciI6IDI2NiwNCiAgICAgICAgICAgICJpdGVtcyI6IFsNCiAgICAgICAgICAgICAgInZhbHVlIiwNCiAgICAgICAgICAgICAgInN0YXR1cyINCiAgICAgICAgICAgIF0NCiAgICAgICAgICB9DQogICAgICAgIH0NCiAgICAgIH0NCiAgICB9LA0KICAgIHsNCiAgICAgICJDbGFzcyI6ICJzZW5zb3IiLA0KICAgICAgIlR5cGUiOiAidGVtcGVyYXR1cmUtc2Vuc29yIiwNCiAgICAgICJNb2RlbCI6ICJTRU4tVEVNUCIsDQogICAgICAiTmFtZSI6ICLsmKjrj4TshLzshJwiLA0KICAgICAgIlZhbHVlVW5pdCI6ICLihIMiLA0KICAgICAgIlZhbHVlVHlwZSI6ICJmbG9hdCIsDQogICAgICAiQ29tbVNwZWMiOiB7DQogICAgICAgICJLU19YXzMyNjdfMjAxOCI6IHsNCiAgICAgICAgICAicmVhZCI6IHsNCiAgICAgICAgICAgICJzdGFydGluZ19yZWdpc3RlciI6IDI2OSwNCiAgICAgICAgICAgICJpdGVtcyI6IFsNCiAgICAgICAgICAgICAgInZhbHVlIiwNCiAgICAgICAgICAgICAgInN0YXR1cyINCiAgICAgICAgICAgIF0NCiAgICAgICAgICB9DQogICAgICAgIH0NCiAgICAgIH0NCiAgICB9LA0KICAgIHsNCiAgICAgICJDbGFzcyI6ICJzZW5zb3IiLA0KICAgICAgIlR5cGUiOiAidGVtcGVyYXR1cmUtc2Vuc29yIiwNCiAgICAgICJNb2RlbCI6ICJTRU4tVEVNUCIsDQogICAgICAiTmFtZSI6ICLsmKjrj4TshLzshJwiLA0KICAgICAgIlZhbHVlVW5pdCI6ICLihIMiLA0KICAgICAgIlZhbHVlVHlwZSI6ICJmbG9hdCIsDQogICAgICAiQ29tbVNwZWMiOiB7DQogICAgICAgICJLU19YXzMyNjdfMjAxOCI6IHsNCiAgICAgICAgICAicmVhZCI6IHsNCiAgICAgICAgICAgICJzdGFydGluZ19yZWdpc3RlciI6IDI3MiwNCiAgICAgICAgICAgICJpdGVtcyI6IFsNCiAgICAgICAgICAgICAgInZhbHVlIiwNCiAgICAgICAgICAgICAgInN0YXR1cyINCiAgICAgICAgICAgIF0NCiAgICAgICAgICB9DQogICAgICAgIH0NCiAgICAgIH0NCiAgICB9LA0KICAgIHsNCiAgICAgICJDbGFzcyI6ICJzZW5zb3IiLA0KICAgICAgIlR5cGUiOiAidGVtcGVyYXR1cmUtc2Vuc29yIiwNCiAgICAgICJNb2RlbCI6ICJTRU4tVEVNUCIsDQogICAgICAiTmFtZSI6ICLsmKjrj4TshLzshJwiLA0KICAgICAgIlZhbHVlVW5pdCI6ICLihIMiLA0KICAgICAgIlZhbHVlVHlwZSI6ICJmbG9hdCIsDQogICAgICAiQ29tbVNwZWMiOiB7DQogICAgICAgICJLU19YXzMyNjdfMjAxOCI6IHsNCiAgICAgICAgICAicmVhZCI6IHsNCiAgICAgICAgICAgICJzdGFydGluZ19yZWdpc3RlciI6IDI3NSwNCiAgICAgICAgICAgICJpdGVtcyI6IFsNCiAgICAgICAgICAgICAgInZhbHVlIiwNCiAgICAgICAgICAgICAgInN0YXR1cyINCiAgICAgICAgICAgIF0NCiAgICAgICAgICB9DQogICAgICAgIH0NCiAgICAgIH0NCiAgICB9LA0KICAgIHsNCiAgICAgICJDbGFzcyI6ICJzZW5zb3IiLA0KICAgICAgIlR5cGUiOiAidGVtcGVyYXR1cmUtc2Vuc29yIiwNCiAgICAgICJNb2RlbCI6ICJTRU4tVEVNUCIsDQogICAgICAiTmFtZSI6ICLsmKjrj4TshLzshJwiLA0KICAgICAgIlZhbHVlVW5pdCI6ICLihIMiLA0KICAgICAgIlZhbHVlVHlwZSI6ICJmbG9hdCIsDQogICAgICAiQ29tbVNwZWMiOiB7DQogICAgICAgICJLU19YXzMyNjdfMjAxOCI6IHsNCiAgICAgICAgICAicmVhZCI6IHsNCiAgICAgICAgICAgICJzdGFydGluZ19yZWdpc3RlciI6IDI3OCwNCiAgICAgICAgICAgICJpdGVtcyI6IFsNCiAgICAgICAgICAgICAgInZhbHVlIiwNCiAgICAgICAgICAgICAgInN0YXR1cyINCiAgICAgICAgICAgIF0NCiAgICAgICAgICB9DQogICAgICAgIH0NCiAgICAgIH0NCiAgICB9LA0KICAgIHsNCiAgICAgICJDbGFzcyI6ICJzZW5zb3IiLA0KICAgICAgIlR5cGUiOiAiaHVtaWRpdHktc2Vuc29yIiwNCiAgICAgICJNb2RlbCI6ICJTRU4tSFVNSSIsDQogICAgICAiTmFtZSI6ICLsirXrj4TshLzshJwiLA0KICAgICAgIlZhbHVlVW5pdCI6ICIlIiwNCiAgICAgICJWYWx1ZVR5cGUiOiAiZmxvYXQiLA0KICAgICAgIkNvbW1TcGVjIjogew0KICAgICAgICAiS1NfWF8zMjY3XzIwMTgiOiB7DQogICAgICAgICAgInJlYWQiOiB7DQogICAgICAgICAgICAic3RhcnRpbmdfcmVnaXN0ZXIiOiAyODEsDQogICAgICAgICAgICAiaXRlbXMiOiBbDQogICAgICAgICAgICAgICJ2YWx1ZSIsDQogICAgICAgICAgICAgICJzdGF0dXMiDQogICAgICAgICAgICBdDQogICAgICAgICAgfQ0KICAgICAgICB9DQogICAgICB9DQogICAgfSwNCiAgICB7DQogICAgICAiQ2xhc3MiOiAic2Vuc29yIiwNCiAgICAgICJUeXBlIjogImh1bWlkaXR5LXNlbnNvciIsDQogICAgICAiTW9kZWwiOiAiU0VOLUhVTUkiLA0KICAgICAgIk5hbWUiOiAi7Iq164+E7IS87IScIiwNCiAgICAgICJWYWx1ZVVuaXQiOiAiJSIsDQogICAgICAiVmFsdWVUeXBlIjogImZsb2F0IiwNCiAgICAgICJDb21tU3BlYyI6IHsNCiAgICAgICAgIktTX1hfMzI2N18yMDE4Ijogew0KICAgICAgICAgICJyZWFkIjogew0KICAgICAgICAgICAgInN0YXJ0aW5nX3JlZ2lzdGVyIjogMjg0LA0KICAgICAgICAgICAgIml0ZW1zIjogWw0KICAgICAgICAgICAgICAidmFsdWUiLA0KICAgICAgICAgICAgICAic3RhdHVzIg0KICAgICAgICAgICAgXQ0KICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgICAgfQ0KICAgIH0sDQogICAgew0KICAgICAgIkNsYXNzIjogInNlbnNvciIsDQogICAgICAiVHlwZSI6ICJ3ZWlnaHQtc2Vuc29yIiwNCiAgICAgICJNb2RlbCI6ICJTRU4tV0VJRyIsDQogICAgICAiTmFtZSI6ICLrrLTqsozshLzshJwiLA0KICAgICAgIlZhbHVlVW5pdCI6ICJLZyIsDQogICAgICAiVmFsdWVUeXBlIjogImZsb2F0IiwNCiAgICAgICJDb21tU3BlYyI6IHsNCiAgICAgICAgIktTX1hfMzI2N18yMDE4Ijogew0KICAgICAgICAgICJyZWFkIjogew0KICAgICAgICAgICAgInN0YXJ0aW5nX3JlZ2lzdGVyIjogMjg3LA0KICAgICAgICAgICAgIml0ZW1zIjogWw0KICAgICAgICAgICAgICAidmFsdWUiLA0KICAgICAgICAgICAgICAic3RhdHVzIg0KICAgICAgICAgICAgXQ0KICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgICAgfQ0KICAgIH0sDQogICAgew0KICAgICAgIkNsYXNzIjogInNlbnNvciIsDQogICAgICAiVHlwZSI6ICJ3ZWlnaHQtc2Vuc29yIiwNCiAgICAgICJNb2RlbCI6ICJTRU4tV0VJRyIsDQogICAgICAiTmFtZSI6ICLrrLTqsozshLzshJwiLA0KICAgICAgIlZhbHVlVW5pdCI6ICJLZyIsDQogICAgICAiVmFsdWVUeXBlIjogImZsb2F0IiwNCiAgICAgICJDb21tU3BlYyI6IHsNCiAgICAgICAgIktTX1hfMzI2N18yMDE4Ijogew0KICAgICAgICAgICJyZWFkIjogew0KICAgICAgICAgICAgInN0YXJ0aW5nX3JlZ2lzdGVyIjogMjkwLA0KICAgICAgICAgICAgIml0ZW1zIjogWw0KICAgICAgICAgICAgICAidmFsdWUiLA0KICAgICAgICAgICAgICAic3RhdHVzIg0KICAgICAgICAgICAgXQ0KICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgICAgfQ0KICAgIH0NCiAgXQ0KfQ0K";
                private static String default_nutrient_base64 = "";


    private static String decodingbase64(String enstr)
    {
        String cs;
        byte[] csbytes=Base64.getDecoder().decode(enstr);

        cs = new String(csbytes, StandardCharsets.UTF_8) ;
        return cs;
    }

    public static String strReplaceforMeta(boolean isjson, String jsonstr)
        {

            String[][] replace_str = {{"KS-X-3267-2018","KS_X_3267_2018"},{"starting-register","starting_register"}};



            /// json 직렬화를 위해 '-'문자가 들어있는 필드이름을 '_'로 변경한다.
            for (int i = 0; i < 2; i++)
            {
                if (isjson == true)
                {
                    jsonstr = jsonstr.replace(replace_str[i][0], replace_str[i][1]);
                }
                else
                {
                    jsonstr = jsonstr.replace(replace_str[i][1], replace_str[i][0]);
                }
            }
            return jsonstr;
        }
        public static KSX_NodeMeta DeSerialize(String jsonstr)
        {

            //throws JsonParseException, JsonMappingException, IOException
            jsonstr = strReplaceforMeta(true, jsonstr);

            ObjectMapper mapper = new ObjectMapper();
            try
            {
            KSX_NodeMeta mm = mapper.readValue(jsonstr, KSX_NodeMeta.class);
            return mm;
            }
            catch (JsonParseException e)
            {

            }
            catch (JsonMappingException e)
            {

            }
            catch (IOException e)
            {

            }

            return null;
            
            
        }

        
        public static List<KSX_NodeMeta> getNodeMetadatas() 
        {
          

            mMetas.clear();
            String jsonstr = decodingbase64(default_sensor_base64);




            KSX_NodeMeta mm = DeSerialize(jsonstr) ;


            if (mm != null)
            {
                mm.CertificateAuthority = 0;
                mm.CompanyCode = 0;
                mMetas.add(mm);
            }

            jsonstr = decodingbase64(default_actuator_base64);
             mm = DeSerialize(jsonstr);


            if (mm != null)
            {
                mm.CertificateAuthority = 0;
                mm.CompanyCode = 0;
                mMetas.add(mm);
            }

            jsonstr = decodingbase64(default_nutrient_base64);
            mm = DeSerialize(jsonstr);


            if (mm != null)
            {
                mm.CertificateAuthority = 0;
                mm.CompanyCode = 0;
                mMetas.add(mm);
            }


            return mMetas;
        }


    
    
}
